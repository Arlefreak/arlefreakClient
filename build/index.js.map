{"version":3,"sources":["../server/index.js"],"names":["express","require","sm","path","config","resolve","__dirname","silent","bodyParser","errorHandler","methodOverride","ejs","port","parseInt","process","env","PORT","DEV","NODE_ENV","app","sitemap","createSitemap","hostname","cacheTime","urls","url","changefreq","priority","engine","__express","set","use","static","get","req","res","toXML","err","xml","status","end","header","send","routes","urlencoded","extended","dumpExceptions","showStack","listen","onStart","info","console","log"],"mappings":"AAAA;;AACA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,KAAKD,QAAQ,SAAR,CAAX;AACA,IAAME,OAAOF,QAAQ,MAAR,CAAb;AACAA,QAAQ,QAAR,EAAkBG,MAAlB,CAAyB,EAACD,MAAMA,KAAKE,OAAL,CAAaC,SAAb,EAAwB,MAAxB,CAAP,EAAwCC,QAAQ,IAAhD,EAAzB;AACA,IAAMC,aAAaP,QAAQ,aAAR,CAAnB;AACA,IAAMQ,eAAeR,QAAQ,cAAR,CAArB;AACA,IAAMS,iBAAiBT,QAAQ,iBAAR,CAAvB;AACA,IAAMU,MAAMV,QAAQ,KAAR,CAAZ;AACA,IAAMW,OAAOC,SAASC,QAAQC,GAAR,CAAYC,IAArB,EAA2B,EAA3B,KAAkC,IAA/C;AACA,IAAMC,MAAMH,QAAQC,GAAR,CAAYG,QAAZ,KAAyB,YAArC;;AAEA,IAAMC,MAAMnB,SAAZ;AAAA,IACMoB,UAAUlB,GAAGmB,aAAH,CAAkB;AAC1BC,cAAU,oBADgB;AAE1BC,eAAW,MAFe,EAEA;AAC1BC,UAAM,CACF,EAAEC,KAAK,GAAP,EAAaC,YAAY,OAAzB,EAAkCC,UAAU,GAA5C,EADE,EAEF,EAAEF,KAAK,YAAP,EAAsBC,YAAY,OAAlC,EAA4CC,UAAU,GAAtD,EAFE,EAGF,EAAEF,KAAK,SAAP,EAAmBC,YAAY,OAA/B,EAAyCC,UAAU,GAAnD,EAHE,EAIF,EAAEF,KAAK,QAAP,EAAkBC,YAAY,OAA9B,EAAwCC,UAAU,GAAlD,EAJE,EAKF,EAAEF,KAAK,MAAP,EAAgBC,YAAY,SAA5B,EAAwCC,UAAU,GAAlD,EALE,EAMF,EAAEF,KAAK,SAAP,EAAmBC,YAAY,OAA/B,EAAyCC,UAAU,GAAnD,EANE;AAHoB,CAAlB,CADhB;;AAeAR,IAAIS,MAAJ,CAAW,OAAX,EAAoB3B,QAAQ,KAAR,EAAe4B,SAAnC;AACAV,IAAIW,GAAJ,CAAQ,OAAR,EAAiB3B,KAAKE,OAAL,CAAaC,SAAb,EAAwB,UAAxB,CAAjB;AACAa,IAAIW,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;;AAEAX,IAAIY,GAAJ,CAAQ/B,QAAQgC,MAAR,CAAe7B,KAAKE,OAAL,CAAaC,SAAb,EAAwB,WAAxB,CAAf,CAAR;;AAEAa,IAAIc,GAAJ,CAAQ,cAAR,EAAwB,UAASC,GAAT,EAAcC,GAAd,EAAmB;AACvCf,YAAQgB,KAAR,CAAe,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC/B,YAAID,GAAJ,EAAS;AACL,mBAAOF,IAAII,MAAJ,CAAW,GAAX,EAAgBC,GAAhB,EAAP;AACH;AACDL,YAAIM,MAAJ,CAAW,cAAX,EAA2B,iBAA3B;AACAN,YAAIO,IAAJ,CAAUJ,GAAV;AACH,KAND;AAOH,CARD;;AAUA,OAAOK,MAAP,MAAmB,qBAAnB;AACAxB,IAAIc,GAAJ,CAAQ,GAAR,EAAaU,MAAb;;AAEAxB,IAAIY,GAAJ,CAAQrB,gBAAR;;AAEAS,IAAIY,GAAJ,CAAQvB,WAAWoC,UAAX,CAAsB;AAC1BC,cAAU;AADgB,CAAtB,CAAR;;AAIA1B,IAAIY,GAAJ,CAAQtB,aAAa;AACjBqC,oBAAgB,IADC;AAEjBC,eAAW;AAFM,CAAb,CAAR;;AAKA5B,IAAI6B,MAAJ,CAAWpC,IAAX,EAAiB,SAAjB,EAA4B,SAASqC,OAAT,CAAiBZ,GAAjB,EAAsB;AAC9C,QAAIa,kCAAgCtC,IAAhC,iCAAgEA,IAAhE,eAA8EK,GAAlF;AACA,QAAIoB,GAAJ,EAAS;AACLc,gBAAQC,GAAR,CAAYf,GAAZ;AACH;AACDc,YAAQD,IAAR,CAAaA,IAAb;AACH,CAND","file":"index.js","sourcesContent":["'use strict';\nconst express = require('express');\nconst sm = require('sitemap');\nconst path = require('path');\nrequire('dotenv').config({path: path.resolve(__dirname, '.env'), silent: true});\nconst bodyParser = require('body-parser');\nconst errorHandler = require('errorhandler');\nconst methodOverride = require('method-override');\nconst ejs = require('ejs');\nconst port = parseInt(process.env.PORT, 10) || 8000;\nconst DEV = process.env.NODE_ENV !== 'production';\n\nconst app = express()\n    , sitemap = sm.createSitemap ({\n        hostname: 'https://ellugar.co',\n        cacheTime: 600000,        // 600 sec - cache purge period\n        urls: [\n            { url: '/',  changefreq: 'daily', priority: 0.9 },\n            { url: '/projects/',  changefreq: 'daily',  priority: 0.8 },\n            { url: '/about/',  changefreq: 'daily',  priority: 0.7 },\n            { url: '/logs/',  changefreq: 'daily',  priority: 0.6 },\n            { url: '/cv/',  changefreq: 'monthly',  priority: 0.5 },\n            { url: '/ligoj/',  changefreq: 'daily',  priority: 0.4 },\n        ]\n    });\n\n\napp.engine('.html', require('ejs').__express);\napp.set('views', path.resolve(__dirname, '../views'));\napp.set('view engine', 'ejs');\n\napp.use(express.static(path.resolve(__dirname, '../public')));\n\napp.get('/sitemap.xml', function(req, res) {\n    sitemap.toXML( function (err, xml) {\n        if (err) {\n            return res.status(500).end();\n        }\n        res.header('Content-Type', 'application/xml');\n        res.send( xml );\n    });\n});\n\nimport routes from '../routes/index.jsx';\napp.get('*', routes);\n\napp.use(methodOverride());\n\napp.use(bodyParser.urlencoded({\n    extended: true\n}));\n\napp.use(errorHandler({\n    dumpExceptions: true,\n    showStack: true\n}));\n\napp.listen(port, '0.0.0.0', function onStart(err) {\n    var info = `==> Listening on port ${port}. Open up http://0.0.0.0:${port}/ DEV: ${DEV}`;\n    if (err) {\n        console.log(err);\n    }\n    console.info(info);\n});\n"]}